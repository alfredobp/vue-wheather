{"ast":null,"code":"import { LMap, LTileLayer, LMarker } from \"vue2-leaflet\"; // import HelloWorld from \"./components/HelloWorld.vue\";\n\nexport default {\n  components: {\n    LMap,\n    LTileLayer,\n    LMarker\n  },\n  name: \"App\",\n\n  data() {\n    return {\n      greenIcon: '',\n      api: \"google.es\",\n      data: \"\",\n      error: false,\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n      attribution: '&copy; <a target=\"_blank\" href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\n      zoom: 15,\n      center: [36.7738869, -6.3545177, 15],\n      markerLatLng: [36.7738869, -6.3545177, 15]\n    };\n  },\n\n  created() {\n    console.log(navigator.geolocation.getCurrentPosition(this.showPosition));\n    this.greenIcon = LMap.icon({\n      iconUrl: 'leaf-green.png',\n      shadowUrl: 'leaf-shadow.png',\n      iconSize: [38, 95],\n      // size of the icon\n      shadowSize: [50, 64],\n      // size of the shadow\n      iconAnchor: [22, 94],\n      // point of the icon which will correspond to marker's location\n      shadowAnchor: [4, 62],\n      // the same for the shadow\n      popupAnchor: [-3, -76] // point from which the popup should open relative to the iconAnchor\n\n    });\n  },\n\n  methods: {\n    showPosition(position) {\n      this.getInfo(position.coords.latitude, position.coords.longitude);\n    },\n\n    getInfo(a, b) {\n      const axios = require(\"axios\");\n\n      var vm = this;\n      const options = {\n        method: \"GET\",\n        url: \"https://yahoo-weather5.p.rapidapi.com/weather\",\n        params: {\n          lat: a ? a : \"36.7738869\",\n          long: b ? b : \"-6.3545177,15z\",\n          format: \"json\",\n          u: \"f\"\n        },\n        headers: {\n          \"X-RapidAPI-Key\": \"99833a4266mshe439dc5ecc4747ap155b42jsnab34657115fe\",\n          \"X-RapidAPI-Host\": \"yahoo-weather5.p.rapidapi.com\"\n        }\n      };\n      axios.request(options).then(function (response) {\n        console.log(response.data);\n        vm.data = response.data;\n      }).catch(function (error) {\n        console.error(error);\n        this.error = true;\n      });\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAiDA,yD,CACA;;AACA;EACAA;IACAC,IADA;IAEAC,UAFA;IAGAC;EAHA,CADA;EAMAC,WANA;;EAOAC;IACA;MACAC,aADA;MAEAC,gBAFA;MAGAF,QAHA;MAIAG,YAJA;MAKAC,yDALA;MAMAC,aACA,0FAPA;MAQAC,QARA;MASAC,oCATA;MAUAC;IAVA;EAYA,CApBA;;EAsBAC;IACAC;IACA;MACAC,yBADA;MAEAC,4BAFA;MAIAC,kBAJA;MAIA;MACAC,oBALA;MAKA;MACAC,oBANA;MAMA;MACAC,qBAPA;MAOA;MACAC,sBARA,CAQA;;IARA;EAUA,CAlCA;;EAmCAC;IACAC;MACA;IACA,CAHA;;IAIAC;MACA;;MACA;MACA;QACAC,aADA;QAEAjB,oDAFA;QAGAkB;UACAC,yBADA;UAEAC,8BAFA;UAGAC,cAHA;UAIAC;QAJA,CAHA;QASAC;UACA,sEADA;UAEA;QAFA;MATA;MAeAC,MACAC,OADA,CACAC,OADA,EAEAC,IAFA,CAEA;QACArB;QACAsB;MACA,CALA,EAMAC,KANA,CAMA;QACAvB;QACA;MACA,CATA;IAUA;;EAhCA;AAnCA","names":["components","LMap","LTileLayer","LMarker","name","data","greenIcon","api","error","url","attribution","zoom","center","markerLatLng","created","console","iconUrl","shadowUrl","iconSize","shadowSize","iconAnchor","shadowAnchor","popupAnchor","methods","showPosition","getInfo","method","params","lat","long","format","u","headers","axios","request","options","then","vm","catch"],"sourceRoot":"src","sources":["App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n       <l-map style=\"height: 300px\" :zoom=\"zoom\" :center=\"center\">\n      <l-tile-layer :url=\"url\" :attribution=\"attribution\"></l-tile-layer>\n      <l-marker :lat-lng=\"markerLatLng\"></l-marker>\n    </l-map>\n  <sui-container>\n<div class=\"\" v-if=\"!error\">\n    <div class=\"col-md-6\" style=\"width: 50%; margin: 0 auto\">\n      <h1 is=\"sui-segment\" inverted>\n\n   Previsión Meterológica para:   {{ data.location.city }}\n      </h1>\n      <h3>Viento</h3>\n\n      <fieldset>\n        <legend>Datos del viento</legend>\n        {{ data.current_observation.wind }}\n      </fieldset>\n   <sui-divider horizontal>Datos Atmósfericos</sui-divider>\n     \n        <img src=\"./assets/presion.png\" width=\"30px\">\n        {{ data.current_observation.atmosphere.pressure }}\n\n\n\n\n\n      <fieldset>\n        <legend>Datos actuales</legend>\n           <img src=\"./assets/thermometer.png\" width=\"30px\">\n        Tª: {{ (((data.current_observation.condition.temperature - 32) * 5)  / 9).toFixed(2) }} ªC\n        <br>\n        {{ data.current_observation }}\n      </fieldset>\n<aside> Datos:</aside>\n      <div id=\"demo\"></div>\n    </div>\n  </div>\n\n  <div v-else>\n    Se ha producido un eror\n    \n  </div>\n  </sui-container>\n  </div>\n</template>\n\n<script>\nimport { LMap, LTileLayer, LMarker } from \"vue2-leaflet\";\n// import HelloWorld from \"./components/HelloWorld.vue\";\nexport default {\n   components: {\n    LMap,\n    LTileLayer,\n    LMarker,\n  },\n  name: \"App\",\n  data() {\n    return {\n      greenIcon:'',\n      api: \"google.es\",\n      data: \"\",\n      error:false,\n           url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n      attribution:\n        '&copy; <a target=\"_blank\" href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\n      zoom: 15,\n      center: [36.7738869, -6.3545177,15],\n      markerLatLng: [36.7738869, -6.3545177,15],\n    };\n  },\n \n  created() {\n    console.log(navigator.geolocation.getCurrentPosition(this.showPosition));\nthis.greenIcon=LMap.icon({\n    iconUrl: 'leaf-green.png',\n    shadowUrl: 'leaf-shadow.png',\n\n    iconSize:     [38, 95], // size of the icon\n    shadowSize:   [50, 64], // size of the shadow\n    iconAnchor:   [22, 94], // point of the icon which will correspond to marker's location\n    shadowAnchor: [4, 62],  // the same for the shadow\n    popupAnchor:  [-3, -76] // point from which the popup should open relative to the iconAnchor\n});\n  },\n  methods: {\n    showPosition(position) {\n      this.getInfo(position.coords.latitude, position.coords.longitude);\n    },\n    getInfo(a, b) {\n      const axios = require(\"axios\");\n      var vm = this;\n      const options = {\n        method: \"GET\",\n        url: \"https://yahoo-weather5.p.rapidapi.com/weather\",\n        params: {\n          lat: a ? a : \"36.7738869\",\n          long: b ? b : \"-6.3545177,15z\",\n          format: \"json\",\n          u: \"f\",\n        },\n        headers: {\n          \"X-RapidAPI-Key\": \"99833a4266mshe439dc5ecc4747ap155b42jsnab34657115fe\",\n          \"X-RapidAPI-Host\": \"yahoo-weather5.p.rapidapi.com\",\n        },\n      };\n\n      axios\n        .request(options)\n        .then(function (response) {\n          console.log(response.data);\n          vm.data = response.data;\n        })\n        .catch(function (error) {\n          console.error(error);\n          this.error=true\n        });\n    },\n  },\n};\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}